The current gcc trunk and 4.9 miscompiles the following code on x86_64-linux at -Os and above in both 32-bit and 64-bit modes.

This is a regression from 4.8.x. 


$ gcc-trunk -v
Using built-in specs.
COLLECT_GCC=gcc-trunk
COLLECT_LTO_WRAPPER=/usr/local/gcc-trunk/libexec/gcc/x86_64-unknown-linux-gnu/4.10.0/lto-wrapper
Target: x86_64-unknown-linux-gnu
Configured with: ../gcc-trunk/configure --prefix=/usr/local/gcc-trunk --enable-languages=c,c++ --disable-werror --enable-multilib
Thread model: posix
gcc version 4.10.0 20140702 (experimental) [trunk revision 212218] (GCC) 
$ 
$ gcc-trunk -O1 small.c; a.out
0
$ gcc-4.8 -Os small.c; a.out
0
$ 
$ gcc-trunk -Os small.c; a.out
1
$ gcc-4.9 -Os small.c; a.out
1
$ 


-------------------------------


int printf (const char *, ...);

int a = 1, *e = &a, **f = &e, *l, *p, j;
static int b;
long d;
short g;

void
fn1 (int *p)
{
  int m;
  if (!(*p & j))
    {
      int *n = &m;
      for (d = 6; d; d--)
	{
	  for (g = 0; g < 1; g++)
	    {
	      n = l = *f;
	      b = *p;
	    }
	  *n = 0;
	}
    }
}

int
main ()
{
  p = *f;
  fn1 (p);
  printf ("%d\n", b);
  return 0;
}