The current gcc trunk miscompiles the following code on x86_64-linux-gnu at -O2 and -O3 in both 32-bit and 64-bit modes. 

This is a regression from 5.2.x.


$ gcc-trunk -v
Using built-in specs.
COLLECT_GCC=gcc-trunk
COLLECT_LTO_WRAPPER=/usr/local/gcc-trunk/libexec/gcc/x86_64-pc-linux-gnu/6.0.0/lto-wrapper
Target: x86_64-pc-linux-gnu
Configured with: ../gcc-trunk/configure --prefix=/usr/local/gcc-trunk --enable-languages=c,c++ --disable-werror --enable-multilib
Thread model: posix
gcc version 6.0.0 20151101 (experimental) [trunk revision 229639] (GCC) 
$ 
$ gcc-trunk -Os small.c; ./a.out
0
$ gcc-5.2 -O2 small.c; ./a.out
0
$ 
$ gcc-trunk -O2 small.c
$ ./a.out
-16
$ 


------------------------------------


int printf (const char *, ...); 

int a, c, d, e, g, h;
short f;

short
fn1 () 
{
  int j[2];
  for (; e; e++)
    if (j[0])
      for (;;)
	;
  if (!g)
    return f;
}

int
main ()
{
  for (; a < 1; a++)
    {
      for (c = 0; c < 2; c++)
	{ 
	  d && (f = 0); 
	  h = fn1 (); 
	}
      printf ("%d\n", (char) f);   
   }
  
 return 0;
}