The current clang trunk miscompiles the following code at -O3 on x86_64-linux-gnu in 64-bit mode (but not in 32-bit mode).

This is a regression from 3.4.x. 

$ clang-trunk -v
clang version 3.5.0 (trunk 213431)
Target: x86_64-unknown-linux-gnu
Thread model: posix
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.8.1
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7.3
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8.1
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Selected multilib: .;@m64
$ 
$ clang-trunk -m64 -O2 small.c; a.out
$ clang-trunk -m32 -O3 small.c; a.out
$ clang-3.4 -m64 -O3 small.c; a.out
$ 
$ clang-trunk -m64 -O3 small.c
$ a.out
Aborted (core dumped)
$ 


---------------------------------


int a, b, c[4][8] = {{1}}, d, e;

int
fn1 (int p)
{
  return p ? 1 % p : 0;
}

void
fn2 ()
{
  for (e = 0; e < 4; e++)
    {
      c[d + 1][e + 1] = c[e][e];
      b = fn1 (a ^ 1);
    }
}

void
fn3 ()
{
  fn2 ();
}

int
main ()
{
  fn3 ();
  if (c[1][2] != 1)
    __builtin_abort (); 
  return 0;
}