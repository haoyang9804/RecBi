The following code is miscompiled by the current clang trunk on x86_64-linux-gnu at -Os and above in both 32-bit and 64-bit modes.  It also affects all earlier clang versions since at least 3.0. 

The generated code in the 64-bit mode also seems to behave nondeterministically. 

$ clang-trunk -v
clang version 3.8.0 (trunk 245480)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/tools/bin
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.9
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.9.2
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/5.1.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7.3
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8.2
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9.2
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/5.1.0
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Candidate multilib: x32;@mx32
Selected multilib: .;@m64
$ 
$ clang-trunk -m32 -O1 small.c; ./a.out
4
$ clang-trunk -m32 -Os small.c; ./a.out
3
$ clang-3.0 -m32 -Os small.c; ./a.out
3
$ 
$ clang-trunk -m64 -Os small.c
$ ./a.out
3
$ ./a.out
3
$ ./a.out
4
$ ./a.out
3
$ 


--------------------------------


int printf(const char *, ...);

int a;

short
fn1 (short p1)
{
  return p1 + 1;
}

short
fn2 (int p1, int p2)
{
  return p1 + p2;
}

int
main ()
{
  int c;
  char e;
  c = fn2 (-1, a && 1);
  e = fn1 ((unsigned) c > 33000) + 2;

  printf("%d\n", e);

  return 0;
}