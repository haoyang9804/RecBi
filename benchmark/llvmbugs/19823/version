The following code is miscompiled by the current clang trunk on x86_64-linux-gnu at -O2 and -O3 in 64-bit mode (but not in 32-bit).  

This is a regression from 3.4.

$ clang-trunk -v
clang version 3.5.0 (trunk 209291)
Target: x86_64-unknown-linux-gnu
Thread model: posix
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.8.1
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7.3
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8.1
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Selected multilib: .;@m64
$ 
$ clang-trunk -m64 -Os small.c; a.out
1
$ clang-trunk -m32 -O2 small.c; a.out
1
$ clang-3.4 -m64 -O2 small.c; a.out
1
$ 
$ clang-trunk -m64 -O2 small.c; a.out
0
$ 


--------------------------------


int printf (const char *, ...);

short a, b, *c = &a;
char d = 0;

int
main ()
{
  char *t = &d;

 lbl:
  b = (*t)--;
  *c = 1;
  if (d)
    goto lbl;

  printf ("%d\n", a);
  return 0;
}