The following code is miscompiled by the current clang trunk on x86_64-linux-gnu at -O1 and above in both 32-bit and 64-bit modes.

It affects all clang versions since 3.4.x, making it a regression from clang 3.3. 


$ clang-trunk -v
clang version 3.9.0 (trunk 258697)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/tools/bin
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.9
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/4.9.3
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/5.3.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.6.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.7.3
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.8.4
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9.3
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/5.3.0
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/4.9
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Candidate multilib: x32;@mx32
Selected multilib: .;@m64
$
$ clang-trunk -O0 small.c; ./a.out
$ clang-3.3 -O1 small.c; ./a.out
$
$ clang-trunk -O1 small.c
$ ./a.out
Aborted (core dumped)
$


------------------------------------------


int a = 4, c, d = 10;
unsigned char b = 255;

void
fn1 ()
{ 
  short e;
  int f = -1;
  char g = a;
  for (; c < 1; c++)
    { 
      short h;
      int i;
      char j;
      if (d)
        h = i = f;
      j = b;
      e = ~(~f || b);
      b = ~(~j | (i ^ b && h));
      if (b > 254 || e > -2 || !g)
        if (f != 1)
          __builtin_abort ();
      f = i;
    }
}

int
main ()
{ 
  fn1 ();
  return 0;
}